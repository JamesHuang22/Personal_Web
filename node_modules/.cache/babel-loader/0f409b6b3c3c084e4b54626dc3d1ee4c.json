{"ast":null,"code":"import React from\"react\";import TimelineItem from\"./TimelineItem\";import TimelineHeader from\"./TimelineHeader\";import Resume from\"../../resume.json\";function Timeline(){return/*#__PURE__*/React.createElement(\"div\",{className:\"timeline is-centered\"},/*#__PURE__*/React.createElement(\"header\",{className:\"timeline-header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"tag is-medium is-dark\"},new Date().getFullYear())),/*#__PURE__*/React.createElement(\"div\",{className:\"timeline-item\"},/*#__PURE__*/React.createElement(\"div\",{className:\"timeline-marker is-success\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"timeline-content\"})),Resume.work.map(function(item){return new Date(item.startDate).getFullYear();}).filter(function(value,index,self){return self.indexOf(value)===index;}).map(function(year,i){var content=[];content.push(/*#__PURE__*/React.createElement(TimelineHeader,{key:i,year:year}));content.push(Resume.work.filter(function(work){return new Date(work.startDate).getFullYear()===year;}).map(function(item,j){return/*#__PURE__*/React.createElement(TimelineItem,{key:j,date:new Date(item.startDate).toLocaleString(\"en-UK\",{month:\"long\",year:\"numeric\"}),company:item.company,summary:item.summary});}));return content;}));}export default Timeline;","map":{"version":3,"sources":["/Users/jameshuang/Desktop/Interview Prepare/git_base/personal_web_template/prod/git_prod/Personal_Web/src/components/elements/Timeline.js"],"names":["React","TimelineItem","TimelineHeader","Resume","Timeline","Date","getFullYear","work","map","item","startDate","filter","value","index","self","indexOf","year","i","content","push","j","toLocaleString","month","company","summary"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,mBACE,2BAAK,SAAS,CAAC,sBAAf,eACE,8BAAQ,SAAS,CAAC,iBAAlB,eACE,4BAAM,SAAS,CAAC,uBAAhB,EACG,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EADH,CADF,CADF,cAME,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,4BAAf,EADF,cAEE,2BAAK,SAAS,CAAC,kBAAf,EAFF,CANF,CAUGH,MAAM,CAACI,IAAP,CACEC,GADF,CACM,SAAAC,IAAI,CAAI,CACX,MAAO,IAAIJ,CAAAA,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBJ,WAAzB,EAAP,CACD,CAHF,EAGIK,MAHJ,CAGW,SAACC,KAAD,CAAQC,KAAR,CAAeC,IAAf,QAAwBA,CAAAA,IAAI,CAACC,OAAL,CAAaH,KAAb,IAAwBC,KAAhD,EAHX,EAIEL,GAJF,CAIM,SAACQ,IAAD,CAAOC,CAAP,CAAa,CAChB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAA,OAAO,CAACC,IAAR,cACE,oBAAC,cAAD,EAAgB,GAAG,CAAEF,CAArB,CAAwB,IAAI,CAAED,IAA9B,EADF,EAGAE,OAAO,CAACC,IAAR,CACEhB,MAAM,CAACI,IAAP,CACGI,MADH,CACU,SAAAJ,IAAI,QAAI,IAAIF,CAAAA,IAAJ,CAASE,IAAI,CAACG,SAAd,EAAyBJ,WAAzB,KAA2CU,IAA/C,EADd,EAEGR,GAFH,CAEO,SAACC,IAAD,CAAOW,CAAP,CAAa,CAChB,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEA,CADP,CAEE,IAAI,CAAE,GAAIf,CAAAA,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBW,cAAzB,CAAwC,OAAxC,CAAiD,CACrDC,KAAK,CAAE,MAD8C,CAErDN,IAAI,CAAE,SAF+C,CAAjD,CAFR,CAME,OAAO,CAAEP,IAAI,CAACc,OANhB,CAOE,OAAO,CAAEd,IAAI,CAACe,OAPhB,EADF,CAWD,CAdH,CADF,EAiBA,MAAON,CAAAA,OAAP,CACD,CA3BF,CAVH,CADF,CAyCD,CAED,cAAed,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\n\nfunction Timeline() {\n  return (\n    <div className=\"timeline is-centered\">\n      <header className=\"timeline-header\">\n        <span className=\"tag is-medium is-dark\">\n          {new Date().getFullYear()}\n        </span>\n      </header>\n      <div className=\"timeline-item\">\n        <div className=\"timeline-marker is-success\"></div>\n        <div className=\"timeline-content\"></div>\n      </div>\n      {Resume.work\n        .map(item => {\n          return new Date(item.startDate).getFullYear();\n        }).filter((value, index, self) => self.indexOf(value) === index)\n        .map((year, i) => {\n          let content = [];\n          content.push(\n            <TimelineHeader key={i} year={year}/>\n          );\n          content.push(\n            Resume.work\n              .filter(work => new Date(work.startDate).getFullYear() === year)\n              .map((item, j) => {\n                return (\n                  <TimelineItem\n                    key={j}\n                    date={new Date(item.startDate).toLocaleString(\"en-UK\", {\n                      month: \"long\",\n                      year: \"numeric\"\n                    })}\n                    company={item.company}\n                    summary={item.summary}\n                  />\n                );\n              })\n          );\n          return content;\n        })}\n    </div>\n  );\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}